{"version":3,"file":"models.js","sourceRoot":"","sources":["../../src/project/models.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020-2021 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport {RegistryTypes, RegisteredTypes, OverrideModuleType, OverrideBundleType} from '@polkadot/types/types';\nimport {plainToClass, Transform, Type} from 'class-transformer';\nimport {\n  Allow,\n  ArrayMaxSize,\n  IsArray,\n  IsBoolean,\n  IsEnum,\n  IsInt,\n  IsObject,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport {SubqlKind} from './constants';\nimport {\n  ProjectManifest,\n  SubqlBlockFilter,\n  SubqlCallFilter,\n  SubqlEventFilter,\n  SubqlNetworkFilter,\n  SubqlHandler,\n  SubqlMapping,\n  SubqlRuntimeDatasource,\n} from './types';\n\nexport class ProjectNetwork implements RegisteredTypes {\n  @IsString()\n  endpoint: string;\n  @IsString()\n  @IsOptional()\n  dictionary?: string;\n  @IsObject()\n  @IsOptional()\n  types?: RegistryTypes;\n  @IsObject()\n  @IsOptional()\n  typesAlias?: Record<string, OverrideModuleType>;\n  @IsObject()\n  @IsOptional()\n  typesBundle?: OverrideBundleType;\n  @IsObject()\n  @IsOptional()\n  typesChain?: Record<string, RegistryTypes>;\n  @IsObject()\n  @IsOptional()\n  typesSpec?: Record<string, RegistryTypes>;\n}\n\nexport class ProjectManifestImpl implements ProjectManifest {\n  @Allow()\n  definitions: object;\n  @IsString()\n  description: string;\n  @ValidateNested()\n  @Type(() => ProjectNetwork)\n  @IsObject()\n  network: ProjectNetwork;\n  @IsString()\n  repository: string;\n  @IsString()\n  schema: string;\n  @IsString()\n  specVersion: string;\n  @IsArray()\n  @ValidateNested()\n  @Type(() => RuntimeDataSource)\n  dataSources: RuntimeDataSource[];\n}\n\nexport class BlockFilter implements SubqlBlockFilter {\n  @IsOptional()\n  @IsArray()\n  @ArrayMaxSize(2)\n  specVersion?: [number, number];\n}\n\nexport class EventFilter extends BlockFilter implements SubqlEventFilter {\n  @IsOptional()\n  @IsString()\n  module?: string;\n  @IsOptional()\n  @IsString()\n  method?: string;\n}\n\nexport class NetworkFilter implements SubqlNetworkFilter {\n  @IsString()\n  specName: string;\n}\n\nexport class CallFilter extends EventFilter implements SubqlCallFilter {\n  @IsOptional()\n  @IsBoolean()\n  success?: boolean;\n}\n\nexport class BlockHandler {\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => BlockFilter)\n  filter?: SubqlBlockFilter;\n  @IsEnum(SubqlKind, {groups: [SubqlKind.BlockHandler]})\n  kind: SubqlKind.BlockHandler;\n  @IsString()\n  handler: string;\n}\n\nexport class CallHandler {\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => CallFilter)\n  filter?: SubqlCallFilter;\n  @IsEnum(SubqlKind, {groups: [SubqlKind.CallHandler]})\n  kind: SubqlKind.CallHandler;\n  @IsString()\n  handler: string;\n}\n\nexport class EventHandler {\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => EventFilter)\n  filter?: SubqlEventFilter;\n  @IsEnum(SubqlKind, {groups: [SubqlKind.EventHandler]})\n  kind: SubqlKind.EventHandler;\n  @IsString()\n  handler: string;\n}\n\nexport class Mapping implements SubqlMapping {\n  @Transform((handlers: SubqlHandler[]) => {\n    return handlers.map((handler) => {\n      switch (handler.kind) {\n        case SubqlKind.EventHandler:\n          return plainToClass(EventHandler, handler);\n        case SubqlKind.CallHandler:\n          return plainToClass(CallHandler, handler);\n        case SubqlKind.BlockHandler:\n          return plainToClass(BlockHandler, handler);\n        default:\n          throw new Error(`handler ${handler.kind} not supported`);\n      }\n    });\n  })\n  @IsArray()\n  @ValidateNested()\n  handlers: SubqlHandler[];\n}\n\nexport class RuntimeDataSource implements SubqlRuntimeDatasource {\n  @IsEnum(SubqlKind, {groups: [SubqlKind.Runtime]})\n  kind: SubqlKind.Runtime;\n  @Type(() => Mapping)\n  @ValidateNested()\n  mapping: SubqlMapping;\n  @IsString()\n  name: string;\n  @IsOptional()\n  @IsInt()\n  startBlock?: number;\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => NetworkFilter)\n  filter?: SubqlNetworkFilter;\n}\n"]}