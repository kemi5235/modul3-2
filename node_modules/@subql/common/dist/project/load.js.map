{"version":3,"file":"load.js","sourceRoot":"","sources":["../../src/project/load.ts"],"names":[],"mappings":";AAAA,gEAAgE;AAChE,sCAAsC;;;;;;AAEtC,4CAAoB;AACpB,gDAAwB;AACxB,yDAA+C;AAC/C,qDAA6C;AAC7C,sDAA2B;AAC3B,qCAA6C;AAG7C,SAAgB,mBAAmB,CAAC,IAAY;IAC9C,IAAI,QAAQ,GAAG,IAAI,CAAC;IACpB,IAAI,YAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,YAAE,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,EAAE;QAC3D,QAAQ,GAAG,cAAI,CAAC,IAAI,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;KAC5C;IAED,MAAM,GAAG,GAAG,iBAAI,CAAC,IAAI,CAAC,YAAE,CAAC,YAAY,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC;IAE1D,MAAM,QAAQ,GAAG,gCAAY,CAAC,4BAAmB,EAAE,GAAG,CAAC,CAAC;IACxD,MAAM,MAAM,GAAG,8BAAY,CAAC,QAAQ,EAAE,EAAC,SAAS,EAAE,IAAI,EAAE,oBAAoB,EAAE,IAAI,EAAC,CAAC,CAAC;IACrF,IAAI,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,MAAM,EAAE;QAClB,4BAA4B;QAC5B,MAAM,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7D,MAAM,IAAI,KAAK,CAAC,kCAAkC,SAAS,EAAE,CAAC,CAAC;KAChE;IACD,OAAO,QAAQ,CAAC;AAClB,CAAC;AAhBD,kDAgBC","sourcesContent":["// Copyright 2020-2021 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport fs from 'fs';\nimport path from 'path';\nimport {plainToClass} from 'class-transformer';\nimport {validateSync} from 'class-validator';\nimport yaml from 'js-yaml';\nimport {ProjectManifestImpl} from './models';\nimport {ProjectManifest} from './types';\n\nexport function loadProjectManifest(file: string): ProjectManifest {\n  let filePath = file;\n  if (fs.existsSync(file) && fs.lstatSync(file).isDirectory()) {\n    filePath = path.join(file, 'project.yaml');\n  }\n\n  const doc = yaml.load(fs.readFileSync(filePath, 'utf-8'));\n\n  const manifest = plainToClass(ProjectManifestImpl, doc);\n  const errors = validateSync(manifest, {whitelist: true, forbidNonWhitelisted: true});\n  if (errors?.length) {\n    // TODO: print error details\n    const errorMsgs = errors.map((e) => e.toString()).join('\\n');\n    throw new Error(`failed to parse project.yaml.\\n${errorMsgs}`);\n  }\n  return manifest;\n}\n"]}