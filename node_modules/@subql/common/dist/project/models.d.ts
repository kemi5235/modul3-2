import { RegistryTypes, RegisteredTypes, OverrideModuleType, OverrideBundleType } from '@polkadot/types/types';
import { SubqlKind } from './constants';
import { ProjectManifest, SubqlBlockFilter, SubqlCallFilter, SubqlEventFilter, SubqlNetworkFilter, SubqlHandler, SubqlMapping, SubqlRuntimeDatasource } from './types';
export declare class ProjectNetwork implements RegisteredTypes {
    endpoint: string;
    dictionary?: string;
    types?: RegistryTypes;
    typesAlias?: Record<string, OverrideModuleType>;
    typesBundle?: OverrideBundleType;
    typesChain?: Record<string, RegistryTypes>;
    typesSpec?: Record<string, RegistryTypes>;
}
export declare class ProjectManifestImpl implements ProjectManifest {
    definitions: object;
    description: string;
    network: ProjectNetwork;
    repository: string;
    schema: string;
    specVersion: string;
    dataSources: RuntimeDataSource[];
}
export declare class BlockFilter implements SubqlBlockFilter {
    specVersion?: [number, number];
}
export declare class EventFilter extends BlockFilter implements SubqlEventFilter {
    module?: string;
    method?: string;
}
export declare class NetworkFilter implements SubqlNetworkFilter {
    specName: string;
}
export declare class CallFilter extends EventFilter implements SubqlCallFilter {
    success?: boolean;
}
export declare class BlockHandler {
    filter?: SubqlBlockFilter;
    kind: SubqlKind.BlockHandler;
    handler: string;
}
export declare class CallHandler {
    filter?: SubqlCallFilter;
    kind: SubqlKind.CallHandler;
    handler: string;
}
export declare class EventHandler {
    filter?: SubqlEventFilter;
    kind: SubqlKind.EventHandler;
    handler: string;
}
export declare class Mapping implements SubqlMapping {
    handlers: SubqlHandler[];
}
export declare class RuntimeDataSource implements SubqlRuntimeDatasource {
    kind: SubqlKind.Runtime;
    mapping: SubqlMapping;
    name: string;
    startBlock?: number;
    filter?: SubqlNetworkFilter;
}
