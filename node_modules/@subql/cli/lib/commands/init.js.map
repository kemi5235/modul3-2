{"version":3,"file":"init.js","sourceRoot":"","sources":["../../src/commands/init.ts"],"names":[],"mappings":";AAAA,gEAAgE;AAChE,sCAAsC;;;AAEtC,oDAAoB;AACpB,wDAAwB;AACxB,4CAA8C;AAC9C,4DAAyB;AACzB,mEAA4D;AAG5D,MAAqB,IAAK,SAAQ,iBAAO;IAiBvC,KAAK,CAAC,GAAG;QACP,MAAM,EAAC,IAAI,EAAE,KAAK,EAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACvC,MAAM,OAAO,GAAG,EAAiB,CAAC;QAElC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW;YAC7B,CAAC,CAAC,IAAI,CAAC,WAAW;YAClB,CAAC,CAAC,MAAM,gBAAG,CAAC,MAAM,CAAC,cAAc,EAAE,EAAC,OAAO,EAAE,eAAe,EAAE,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;QACjF,IAAI,YAAE,CAAC,UAAU,CAAC,cAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE;YAC9D,MAAM,IAAI,KAAK,CAAC,aAAa,OAAO,CAAC,IAAI,mCAAmC,CAAC,CAAC;SAC/E;QACD,OAAO,CAAC,UAAU,GAAG,MAAM,gBAAG,CAAC,MAAM,CAAC,gBAAgB,EAAE,EAAC,QAAQ,EAAE,KAAK,EAAC,CAAC,CAAC;QAC3E,OAAO,CAAC,QAAQ,GAAG,MAAM,gBAAG,CAAC,MAAM,CAAC,cAAc,EAAE;YAClD,OAAO,EAAE,4CAA4C;YACrD,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC;QACH,OAAO,CAAC,MAAM,GAAG,MAAM,gBAAG,CAAC,MAAM,CAAC,SAAS,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;QAC/D,OAAO,CAAC,WAAW,GAAG,MAAM,gBAAG,CAAC,MAAM,CAAC,aAAa,EAAE,EAAC,QAAQ,EAAE,KAAK,EAAC,CAAC,CAAC;QACzE,OAAO,CAAC,OAAO,GAAG,MAAM,gBAAG,CAAC,MAAM,CAAC,UAAU,EAAE,EAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;QACnF,OAAO,CAAC,OAAO,GAAG,MAAM,gBAAG,CAAC,MAAM,CAAC,UAAU,EAAE,EAAC,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;QAExF,IAAI,KAAK,CAAC,OAAO,IAAI,OAAO,CAAC,IAAI,EAAE;YACjC,gBAAG,CAAC,MAAM,CAAC,KAAK,CAAC,0BAA0B,CAAC,CAAC;YAC7C,IAAI;gBACF,MAAM,+BAAa,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,OAAO,CAAC,CAAC;gBAC5C,gBAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,IAAI,WAAW,CAAC,CAAC;aAC7C;YAAC,OAAO,CAAC,EAAE;gBACV,4BAA4B;gBAC5B,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;gBACzB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACjB;SACF;IACH,CAAC;;AAhDH,uBAiDC;AAhDQ,gBAAW,GAAG,kCAAkC,CAAC;AAEjD,UAAK,GAAG;IACb,KAAK,EAAE,eAAK,CAAC,OAAO,CAAC,EAAC,IAAI,EAAE,GAAG,EAAC,CAAC;IACjC,OAAO,EAAE,eAAK,CAAC,OAAO,CAAC;QACrB,OAAO,EAAE,IAAI;KACd,CAAC;CACH,CAAC;AAEK,SAAI,GAAG;IACZ;QACE,IAAI,EAAE,aAAa;QACnB,WAAW,EAAE,+BAA+B;KAC7C;CACF,CAAC","sourcesContent":["// Copyright 2020-2021 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport fs from 'fs';\nimport path from 'path';\nimport {Command, flags} from '@oclif/command';\nimport cli from 'cli-ux';\nimport {createProject} from '../controller/init-controller';\nimport {ProjectSpec} from '../types';\n\nexport default class Init extends Command {\n  static description = 'Init a scaffold subquery project';\n\n  static flags = {\n    force: flags.boolean({char: 'f'}),\n    starter: flags.boolean({\n      default: true,\n    }),\n  };\n\n  static args = [\n    {\n      name: 'projectName',\n      description: 'Give the starter project name',\n    },\n  ];\n\n  async run(): Promise<void> {\n    const {args, flags} = this.parse(Init);\n    const project = {} as ProjectSpec;\n\n    project.name = args.projectName\n      ? args.projectName\n      : await cli.prompt('Project name', {default: 'subql-starter', required: true});\n    if (fs.existsSync(path.join(process.cwd(), `${project.name}`))) {\n      throw new Error(`Directory ${project.name} exists, try another project name`);\n    }\n    project.repository = await cli.prompt('Git repository', {required: false});\n    project.endpoint = await cli.prompt('RPC endpoint', {\n      default: 'wss://polkadot.api.onfinality.io/public-ws',\n      required: true,\n    });\n    project.author = await cli.prompt('Authors', {required: true});\n    project.description = await cli.prompt('Description', {required: false});\n    project.version = await cli.prompt('Version:', {default: '1.0.0', required: true});\n    project.license = await cli.prompt('License:', {default: 'Apache-2.0', required: true});\n\n    if (flags.starter && project.name) {\n      cli.action.start('Init the starter package');\n      try {\n        await createProject(process.cwd(), project);\n        cli.action.stop(`${project.name} is ready`);\n      } catch (e) {\n        /* handle all errors here */\n        console.error(e.message);\n        process.exit(1);\n      }\n    }\n  }\n}\n"]}